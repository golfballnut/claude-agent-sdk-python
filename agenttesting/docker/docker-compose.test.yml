# TEST Docker Compose - Agent 4 Tenure Testing
# Uses test_orchestrator.py and test_agent8.py

version: '3.8'

services:
  golf-enrichment-api:
    build:
      context: .
      dockerfile: Dockerfile.test  # ⚠️ Uses TEST Dockerfile!
    container_name: golf-enrichment-test-agent4
    ports:
      - "8000:8000"
    environment:
      # Load from .env file
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - HUNTER_API_KEY=${HUNTER_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - JINA_API_KEY=${JINA_API_KEY:-}
      - BRIGHTDATA_API_TOKEN=${BRIGHTDATA_API_TOKEN:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=test  # Mark as test environment
    volumes:
      - ./results:/app/results
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped

# TEST DOCKER COMPOSE
#
# This tests Agent 4 tenure extraction in Docker:
# - Uses test_orchestrator.py (no Agent 6.5)
# - Uses test_agent8.py (reads Agent 4 tenure)
# - Validates against test_golf_courses tables
#
# Usage:
#   docker-compose -f docker-compose.test.yml up --build
#
# Test endpoint:
#   curl -X POST http://localhost:8000/enrich-course \
#     -H "Content-Type: application/json" \
#     -d '{"course_name": "Brambleton Golf Course", "state_code": "VA", "use_test_tables": true}'
#
# After validation: Sync test files to production
