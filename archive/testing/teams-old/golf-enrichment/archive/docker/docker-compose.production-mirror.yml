version: '3.8'

# Production-Mirror Testing
# This compose file mirrors the exact production environment on Render
# Use this for final testing before deployment

services:
  golf-enrichment-api:
    build:
      context: ../../production/golf-enrichment
      dockerfile: Dockerfile
    container_name: golf-enrichment-production-test
    ports:
      - "8000:8000"
    environment:
      # Production-like environment
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - HUNTER_API_KEY=${HUNTER_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - JINA_API_KEY=${JINA_API_KEY:-}
      - BRIGHTDATA_API_TOKEN=${BRIGHTDATA_API_TOKEN:-}
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    # No volumes - production doesn't have volumes
    # No restart - production handles this differently
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

# Usage:
#
# 1. Ensure production code is synced:
#    python production/scripts/sync_to_production.py golf-enrichment
#
# 2. Start production-mirror test:
#    docker-compose -f docker-compose.production-mirror.yml up --build
#
# 3. Run integration tests against it
#
# 4. If all passes, deploy to Render:
#    cd production/golf-enrichment
#    git add . && git commit -m "Production update" && git push
